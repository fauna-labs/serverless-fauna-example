service: serverless-fauna-example
app: serverless-fauna-example
org: fireridlle

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  environment:
    FAUNA_ROOT_KEY: ${env:FAUNA_ROOT_KEY}
    # FAUNA_DOMAIN: db.fauna.com
    # FAUNA_SCHEME: https
    # FAUNA_PORT: 443

plugins:
  - serverless-fauna
functions:
  hello:
    handler: handler.hello

fauna:
  collections:
    Movies: 
      # can accept any param that accept CreateCollection query. 
      # Read more https://docs.fauna.com/fauna/current/api/fql/functions/createcollection?lang=javascript#param_object
      # name: Movies
      name: Movies
      data: 
        test: 2

  indexes:
    movies_by_type:
      # can accept any param that accept CreateIndex query except source.fields
      # Read more https://docs.fauna.com/fauna/current/api/fql/functions/createindex?lang=javascript#param_object
      name: movies_by_type
      source: ${self:fauna.collections.Movies.name}
      terms:
        fields: 
          - data.type

    movies_by_category:
      name: movies_by_category
      source: ${self:fauna.collections.Movies.name}
      data:
        test: test12
      terms:
        fields: 
          - data.category

    sort_by_year:
      name: sort_by_year
      source: 
        collection: ${self:fauna.collections.Movies.name}
        fields:
          this_year_release: ${file(./IsMovieReleasedCurrentYear.fql)}
      values:
        fields:
          - path: data.type
            reverse: true
          - ref
        bindings:
          - this_year_release